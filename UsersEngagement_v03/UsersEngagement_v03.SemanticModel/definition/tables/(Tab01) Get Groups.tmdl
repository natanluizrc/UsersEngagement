table '(Tab01) Get Groups'
	lineageTag: 68bd421c-522d-4e25-aec6-741ebf9a5489

	column Group_Id
		dataType: string
		lineageTag: 8addc82d-668c-4aaf-b7bf-ef32daaa294e
		summarizeBy: none
		sourceColumn: Group_Id

		annotation SummarizationSetBy = Automatic

	column Group_IsReadOnly
		dataType: boolean
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 5c5cd9ae-88a8-4b53-8ada-cbafbb779bf5
		summarizeBy: none
		sourceColumn: Group_IsReadOnly

		annotation SummarizationSetBy = Automatic

	column Group_IsOnDedicatedCapacity
		dataType: boolean
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: abf32a00-9433-46df-b375-989763c8c926
		summarizeBy: none
		sourceColumn: Group_IsOnDedicatedCapacity

		annotation SummarizationSetBy = Automatic

	column Group_Type
		dataType: string
		lineageTag: 26835ccc-996d-4831-b9e4-59211c469b0d
		summarizeBy: none
		sourceColumn: Group_Type

		annotation SummarizationSetBy = Automatic

	column Group_Name
		dataType: string
		lineageTag: 8587ee30-37f5-43dc-88fd-9e6541379c31
		summarizeBy: none
		sourceColumn: Group_Name

		annotation SummarizationSetBy = Automatic

	partition '(Tab01) Get Groups' = m
		mode: import
		source = ```
				let
				    // Obtém o token de acesso
				    TokenAcesso = #"(Fun01) Get Token"(),
				
				    // Define URL da API para listar grupos
				    UrlGrupos = "https://api.powerbi.com/v1.0/myorg/groups?$top=1000",
				
				    // Requisição GET na API do Power BI
				    RespostaApi = Json.Document(Web.Contents(UrlGrupos, [
				        Headers = [#"Authorization" = "Bearer " & TokenAcesso]
				    ])),
				
				    // Extrai lista de grupos
				    ListaGrupos = RespostaApi[value],
				
				    // Converte lista para tabela
				    TabelaGrupos = Table.FromList(ListaGrupos, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				
				    // Expande colunas dos grupos
				    GruposExpandidos = Table.ExpandRecordColumn(TabelaGrupos, "Column1", 
				        {"id", "isReadOnly", "isOnDedicatedCapacity", "type", "name"},
				        {"Group_Id", "Group_IsReadOnly", "Group_IsOnDedicatedCapacity", "Group_Type", "Group_Name"}
				    ),
				    TipoAlterado = Table.TransformColumnTypes(GruposExpandidos,{{"Group_Id", type text}, {"Group_IsReadOnly", type logical}, {"Group_IsOnDedicatedCapacity", type logical}, {"Group_Type", type text}, {"Group_Name", type text}})
				in
				    TipoAlterado
				```

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

